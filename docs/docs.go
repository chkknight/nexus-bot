// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Get general information about the trading bot API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "info"
                ],
                "summary": "Get API information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal.APIInfo"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check if the trading bot API is healthy and running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal.HealthResponse"
                        }
                    }
                }
            }
        },
        "/predict": {
            "get": {
                "description": "Get prediction for 5-minute price direction (HIGHER/LOWER/NEUTRAL)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prediction"
                ],
                "summary": "Predict price direction",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal.PredictionResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signals": {
            "get": {
                "description": "Get the most recent trading signal generated by the bot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signals"
                ],
                "summary": "Get latest signals",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bot.TradingSignal"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "Get detailed status information about the trading bot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Get bot status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bot.SignalEngineStatus"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "bot.IndicatorSignal": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "signal": {
                    "$ref": "#/definitions/bot.SignalType"
                },
                "strength": {
                    "description": "0-1 confidence",
                    "type": "number"
                },
                "timeframe": {
                    "$ref": "#/definitions/bot.Timeframe"
                },
                "timestamp": {
                    "type": "string"
                },
                "value": {
                    "description": "actual indicator value",
                    "type": "number"
                }
            }
        },
        "bot.SignalEngineStatus": {
            "type": "object",
            "properties": {
                "data_summary": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "last_signal": {
                    "$ref": "#/definitions/bot.TradingSignal"
                },
                "last_update": {
                    "type": "string"
                },
                "ready_status": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "running": {
                    "type": "boolean"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "bot.SignalType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Hold",
                "Buy",
                "Sell"
            ]
        },
        "bot.Timeframe": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "FiveMinute",
                "FifteenMinute",
                "FortyFiveMinute",
                "EightHour",
                "Daily"
            ]
        },
        "bot.TradingSignal": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "indicator_signals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bot.IndicatorSignal"
                    }
                },
                "reasoning": {
                    "type": "string"
                },
                "signal": {
                    "$ref": "#/definitions/bot.SignalType"
                },
                "stop_loss": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "target_price": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "internal.APIInfo": {
            "type": "object",
            "properties": {
                "endpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Trading Bot API"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "internal.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "No signal available yet, bot may still be initializing"
                }
            }
        },
        "internal.HealthResponse": {
            "type": "object",
            "properties": {
                "bot_running": {
                    "type": "boolean",
                    "example": true
                },
                "status": {
                    "type": "string",
                    "example": "healthy"
                },
                "symbol": {
                    "type": "string",
                    "example": "BTCUSD"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "internal.IndicatorPrediction": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "RSI_5m"
                },
                "signal": {
                    "type": "string",
                    "enum": [
                        "BUY",
                        "SELL",
                        "HOLD"
                    ],
                    "example": "BUY"
                },
                "strength": {
                    "type": "number",
                    "example": 0.85
                },
                "timeframe": {
                    "type": "string",
                    "example": "5m"
                }
            }
        },
        "internal.PredictionResponse": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number",
                    "example": 0.75
                },
                "current_price": {
                    "type": "number",
                    "example": 50000.5
                },
                "indicators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal.IndicatorPrediction"
                    }
                },
                "prediction": {
                    "type": "string",
                    "enum": [
                        "HIGHER",
                        "LOWER",
                        "NEUTRAL"
                    ],
                    "example": "HIGHER"
                },
                "reasoning": {
                    "type": "string",
                    "example": "Strong buy signals detected across multiple indicators"
                },
                "symbol": {
                    "type": "string",
                    "example": "BTCUSD"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Trading Bot API",
	Description:      "Multi-timeframe trading bot API for cryptocurrency price prediction",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
